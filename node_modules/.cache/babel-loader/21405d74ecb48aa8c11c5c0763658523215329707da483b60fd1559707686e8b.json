{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Downloads\\\\flashcard-web-app-full\\\\src\\\\components\\\\Flashcard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flashcard({\n  cards,\n  onComplete\n}) {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [wrongCards, setWrongCards] = useState([]);\n  const handleSwipe = direction => {\n    const currentCard = cards[index];\n    if (direction === \"left\") {\n      setWrongCards(prev => [...prev, currentCard]);\n    }\n    if (index < cards.length - 1) {\n      setIndex(prev => prev + 1);\n    } else {\n      if (wrongCards.length > 0) {\n        setIndex(0);\n        cards = [...wrongCards];\n        setWrongCards([]);\n      } else {\n        onComplete && onComplete();\n      }\n    }\n  };\n  if (!cards || cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cards in this deck.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  const card = cards[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-[80vh]\",\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"bg-white shadow-lg rounded-2xl p-6 w-96 text-center\",\n        drag: \"x\",\n        dragConstraints: {\n          left: 0,\n          right: 0\n        },\n        dragElastic: 1,\n        onDragEnd: (_, info) => {\n          if (info.offset.x > 100) handleSwipe(\"right\");else if (info.offset.x < -100) handleSwipe(\"left\");\n        },\n        initial: {\n          opacity: 0,\n          x: 100\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        exit: {\n          opacity: 0,\n          x: -100\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: card.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-4\",\n          children: card.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcard, \"KySYkrS7bN149Ds+GEl4VdjLHF8=\");\n_c = Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","jsxDEV","_jsxDEV","Flashcard","cards","onComplete","_s","index","setIndex","wrongCards","setWrongCards","handleSwipe","direction","currentCard","prev","length","children","fileName","_jsxFileName","lineNumber","columnNumber","card","className","mode","div","drag","dragConstraints","left","right","dragElastic","onDragEnd","_","info","offset","x","initial","opacity","animate","exit","transition","duration","question","answer","_c","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Downloads/flashcard-web-app-full/src/components/Flashcard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function Flashcard({ cards, onComplete }) {\r\n  const [index, setIndex] = useState(0);\r\n  const [wrongCards, setWrongCards] = useState([]);\r\n\r\n  const handleSwipe = (direction) => {\r\n    const currentCard = cards[index];\r\n\r\n    if (direction === \"left\") {\r\n      setWrongCards((prev) => [...prev, currentCard]);\r\n    }\r\n\r\n    if (index < cards.length - 1) {\r\n      setIndex((prev) => prev + 1);\r\n    } else {\r\n      if (wrongCards.length > 0) {\r\n        setIndex(0);\r\n        cards = [...wrongCards];\r\n        setWrongCards([]);\r\n      } else {\r\n        onComplete && onComplete();\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!cards || cards.length === 0) {\r\n    return <p>No cards in this deck.</p>;\r\n  }\r\n\r\n  const card = cards[index];\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-[80vh]\">\r\n      <AnimatePresence mode=\"wait\">\r\n        <motion.div\r\n          key={index}\r\n          className=\"bg-white shadow-lg rounded-2xl p-6 w-96 text-center\"\r\n          drag=\"x\"\r\n          dragConstraints={{ left: 0, right: 0 }}\r\n          dragElastic={1}\r\n          onDragEnd={(_, info) => {\r\n            if (info.offset.x > 100) handleSwipe(\"right\");\r\n            else if (info.offset.x < -100) handleSwipe(\"left\");\r\n          }}\r\n          initial={{ opacity: 0, x: 100 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: -100 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <h2 className=\"text-xl font-bold\">{card.question}</h2>\r\n          <p className=\"text-gray-600 mt-4\">{card.answer}</p>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}