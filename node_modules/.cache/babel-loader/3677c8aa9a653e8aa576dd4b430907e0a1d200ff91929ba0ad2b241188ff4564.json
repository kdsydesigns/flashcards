{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Downloads\\\\flashcard-web-app-full\\\\src\\\\components\\\\Flashcard.js\",\n  _s = $RefreshSig$();\nimport \"./Flashcard.css\";\nimport React, { useState } from \"react\";\nimport { useSpring, animated as a } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcard = ({\n  question,\n  answer,\n  onSwipe\n}) => {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateY(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n\n  // ðŸ‘‰ helper to handle swipes & reset flip\n  const handleSwipe = direction => {\n    if (direction === \"right\") {\n      onSwipe(\"knew\");\n    } else {\n      onSwipe(\"didntKnow\");\n    }\n    // reset to question side for the next card\n    setFlipped(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-container\",\n    children: [/*#__PURE__*/_jsxDEV(a.div, {\n      className: \"flashcard front\",\n      style: {\n        opacity: opacity.to(o => 1 - o),\n        transform\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFlipped(true),\n        children: \"See Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(a.div, {\n      className: \"flashcard back\",\n      style: {\n        opacity,\n        transform,\n        rotateY: \"180deg\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFlipped(false),\n          children: \"See Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSwipe(\"right\"),\n          children: \"Knew it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSwipe(\"left\"),\n          children: \"Didn\\u2019t Know\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcard, \"MzLSWlKKR7V3kdIYeTSH6OzmfnQ=\", false, function () {\n  return [useSpring];\n});\n_c = Flashcard;\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","useSpring","animated","a","jsxDEV","_jsxDEV","Flashcard","question","answer","onSwipe","_s","flipped","setFlipped","transform","opacity","config","mass","tension","friction","handleSwipe","direction","className","children","div","style","to","o","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rotateY","_c","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Downloads/flashcard-web-app-full/src/components/Flashcard.js"],"sourcesContent":["import \"./Flashcard.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useSpring, animated as a } from \"@react-spring/web\";\r\n\r\nconst Flashcard = ({ question, answer, onSwipe }) => {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `perspective(600px) rotateY(${flipped ? 180 : 0}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 },\r\n  });\r\n\r\n  // ðŸ‘‰ helper to handle swipes & reset flip\r\n  const handleSwipe = (direction) => {\r\n    if (direction === \"right\") {\r\n      onSwipe(\"knew\");\r\n    } else {\r\n      onSwipe(\"didntKnow\");\r\n    }\r\n    // reset to question side for the next card\r\n    setFlipped(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flashcard-container\">\r\n      {/* Front side (Question) */}\r\n      <a.div\r\n        className=\"flashcard front\"\r\n        style={{ opacity: opacity.to((o) => 1 - o), transform }}\r\n      >\r\n        <h2>{question}</h2>\r\n        <button onClick={() => setFlipped(true)}>See Answer</button>\r\n      </a.div>\r\n\r\n      {/* Back side (Answer) */}\r\n      <a.div\r\n        className=\"flashcard back\"\r\n        style={{\r\n          opacity,\r\n          transform,\r\n          rotateY: \"180deg\",\r\n        }}\r\n      >\r\n        <h2>{answer}</h2>\r\n        <div className=\"button-group\">\r\n          <button onClick={() => setFlipped(false)}>See Question</button>\r\n          <button onClick={() => handleSwipe(\"right\")}>Knew it</button>\r\n          <button onClick={() => handleSwipe(\"left\")}>Didnâ€™t Know</button>\r\n        </div>\r\n      </a.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flashcard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}