{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Downloads\\\\flashcard-web-app-full\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Flashcard from \"./components/Flashcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [decks, setDecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState(null);\n\n  // Handle CSV upload\n  const handleUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const cards = results.data.filter(row => (row.question || row.Question) && (row.answer || row.Answer)) // ✅ flexible\n        .map(row => ({\n          question: row.question || row.Question,\n          answer: row.answer || row.Answer\n        }));\n        setDecks(prev => ({\n          ...prev,\n          [file.name.replace(\".csv\", \"\")]: cards\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 min-h-screen bg-gray-100\",\n    children: !currentDeck ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Flashcard App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleUpload,\n        className: \"mb-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), Object.keys(decks).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Upload a CSV to create a deck.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: Object.keys(decks).map(deckName => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-white p-4 rounded-lg shadow hover:bg-gray-50 text-left\",\n          onClick: () => setCurrentDeck(deckName),\n          children: [deckName, \" (\", decks[deckName].length, \" cards)\"]\n        }, deckName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mb-4 px-4 py-2 bg-blue-500 text-white rounded\",\n        onClick: () => setCurrentDeck(null),\n        children: \"\\u2190 Back to Decks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flashcard, {\n        cards: decks[currentDeck]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RG4f7fSsZMJNTZaLRO83+BtUrog=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Papa","Flashcard","jsxDEV","_jsxDEV","App","_s","decks","setDecks","currentDeck","setCurrentDeck","handleUpload","e","file","target","files","parse","header","skipEmptyLines","complete","results","cards","data","filter","row","question","Question","answer","Answer","map","prev","name","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","Object","keys","length","deckName","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Downloads/flashcard-web-app-full/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Flashcard from \"./components/Flashcard\";\n\nfunction App() {\n  const [decks, setDecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState(null);\n\n  // Handle CSV upload\nconst handleUpload = (e) => {\n  const file = e.target.files[0];\n  if (!file) return;\n\n  Papa.parse(file, {\n    header: true,\n    skipEmptyLines: true,\n    complete: (results) => {\n      const cards = results.data\n        .filter((row) => (row.question || row.Question) && (row.answer || row.Answer)) // ✅ flexible\n        .map((row) => ({\n          question: row.question || row.Question,\n          answer: row.answer || row.Answer,\n        }));\n\n      setDecks((prev) => ({\n        ...prev,\n        [file.name.replace(\".csv\", \"\")]: cards,\n      }));\n    },\n  });\n};\n\n  return (\n    <div className=\"p-6 min-h-screen bg-gray-100\">\n      {!currentDeck ? (\n        <div className=\"max-w-2xl mx-auto\">\n          <h1 className=\"text-2xl font-bold mb-4\">Flashcard App</h1>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleUpload}\n            className=\"mb-6\"\n          />\n\n          {Object.keys(decks).length === 0 && (\n            <p className=\"text-gray-600\">Upload a CSV to create a deck.</p>\n          )}\n\n          <div className=\"grid gap-4\">\n            {Object.keys(decks).map((deckName) => (\n              <button\n                key={deckName}\n                className=\"bg-white p-4 rounded-lg shadow hover:bg-gray-50 text-left\"\n                onClick={() => setCurrentDeck(deckName)}\n              >\n                {deckName} ({decks[deckName].length} cards)\n              </button>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div>\n          <button\n            className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded\"\n            onClick={() => setCurrentDeck(null)}\n          >\n            ← Back to Decks\n          </button>\n          <Flashcard cards={decks[currentDeck]} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}