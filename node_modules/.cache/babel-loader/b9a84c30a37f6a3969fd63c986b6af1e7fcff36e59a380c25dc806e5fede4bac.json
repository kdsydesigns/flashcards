{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Downloads\\\\flashcard-web-app-full\\\\src\\\\components\\\\Flashcard.js\",\n  _s = $RefreshSig$();\n// src/components/Flashcard.js\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Flashcard({\n  question,\n  answer,\n  onSwipe\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const handleSwipe = direction => {\n    if (!flipped) return; // block swipe before answer is revealed\n    onSwipe(direction);\n    setFlipped(false); // reset for next card\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-96 h-56 perspective\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            rotateY: 180,\n            opacity: 0\n          },\n          animate: {\n            rotateY: 0,\n            opacity: 1\n          },\n          exit: {\n            rotateY: -180,\n            opacity: 0\n          },\n          transition: {\n            duration: 0.6\n          },\n          drag: flipped ? \"x\" : false // ✅ only draggable when flipped\n          ,\n          dragConstraints: {\n            left: 0,\n            right: 0\n          },\n          dragElastic: 0.8,\n          onDragEnd: (e, info) => {\n            if (info.offset.x > 120) {\n              handleSwipe(\"right\"); // Knew it\n            } else if (info.offset.x < -120) {\n              handleSwipe(\"left\"); // Did not know\n            }\n          },\n          className: \"absolute inset-0 flex items-center justify-center \\r bg-white text-gray-800 shadow-2xl rounded-2xl \\r border border-gray-200 text-xl font-semibold px-6 py-4 cursor-grab\",\n          style: {\n            backfaceVisibility: \"hidden\"\n          },\n          children: flipped ? answer : question\n        }, flipped ? \"answer\" : \"question\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), !flipped ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFlipped(true),\n      className: \"mt-6 px-6 py-2 bg-blue-500 text-white rounded-lg shadow hover:bg-blue-600 transition\",\n      children: \"See Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSwipe(\"left\"),\n        className: \"px-6 py-2 bg-red-500 text-white rounded-lg shadow hover:bg-red-600 transition\",\n        children: \"Did not Know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSwipe(\"right\"),\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg shadow hover:bg-green-600 transition\",\n        children: \"Knew it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcard, \"QYn2hzWSEiNCpFk01FECw92BS70=\");\n_c = Flashcard;\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","jsxDEV","_jsxDEV","Flashcard","question","answer","onSwipe","_s","flipped","setFlipped","handleSwipe","direction","className","children","mode","div","initial","rotateY","opacity","animate","exit","transition","duration","drag","dragConstraints","left","right","dragElastic","onDragEnd","e","info","offset","x","style","backfaceVisibility","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Downloads/flashcard-web-app-full/src/components/Flashcard.js"],"sourcesContent":["// src/components/Flashcard.js\r\nimport React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nfunction Flashcard({ question, answer, onSwipe }) {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const handleSwipe = (direction) => {\r\n    if (!flipped) return; // block swipe before answer is revealed\r\n    onSwipe(direction);\r\n    setFlipped(false); // reset for next card\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center\">\r\n      {/* Card container */}\r\n      <div className=\"relative w-96 h-56 perspective\">\r\n        <AnimatePresence mode=\"wait\">\r\n          <motion.div\r\n            key={flipped ? \"answer\" : \"question\"}\r\n            initial={{ rotateY: 180, opacity: 0 }}\r\n            animate={{ rotateY: 0, opacity: 1 }}\r\n            exit={{ rotateY: -180, opacity: 0 }}\r\n            transition={{ duration: 0.6 }}\r\n            drag={flipped ? \"x\" : false} // ✅ only draggable when flipped\r\n            dragConstraints={{ left: 0, right: 0 }}\r\n            dragElastic={0.8}\r\n            onDragEnd={(e, info) => {\r\n              if (info.offset.x > 120) {\r\n                handleSwipe(\"right\"); // Knew it\r\n              } else if (info.offset.x < -120) {\r\n                handleSwipe(\"left\"); // Did not know\r\n              }\r\n            }}\r\n            className=\"absolute inset-0 flex items-center justify-center \r\n                       bg-white text-gray-800 shadow-2xl rounded-2xl \r\n                       border border-gray-200 text-xl font-semibold px-6 py-4 cursor-grab\"\r\n            style={{ backfaceVisibility: \"hidden\" }}\r\n          >\r\n            {flipped ? answer : question}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      {/* Buttons */}\r\n      {!flipped ? (\r\n        <button\r\n          onClick={() => setFlipped(true)}\r\n          className=\"mt-6 px-6 py-2 bg-blue-500 text-white rounded-lg shadow hover:bg-blue-600 transition\"\r\n        >\r\n          See Answer\r\n        </button>\r\n      ) : (\r\n        <div className=\"flex gap-4 mt-6\">\r\n          <button\r\n            onClick={() => handleSwipe(\"left\")}\r\n            className=\"px-6 py-2 bg-red-500 text-white rounded-lg shadow hover:bg-red-600 transition\"\r\n          >\r\n            Did not Know\r\n          </button>\r\n          <button\r\n            onClick={() => handleSwipe(\"right\")}\r\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg shadow hover:bg-green-600 transition\"\r\n          >\r\n            Knew it\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flashcard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,WAAW,GAAIC,SAAS,IAAK;IACjC,IAAI,CAACH,OAAO,EAAE,OAAO,CAAC;IACtBF,OAAO,CAACK,SAAS,CAAC;IAClBF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,2CAA2C;IAAAC,QAAA,gBAExDX,OAAA;MAAKU,SAAS,EAAC,gCAAgC;MAAAC,QAAA,eAC7CX,OAAA,CAACF,eAAe;QAACc,IAAI,EAAC,MAAM;QAAAD,QAAA,eAC1BX,OAAA,CAACH,MAAM,CAACgB,GAAG;UAETC,OAAO,EAAE;YAAEC,OAAO,EAAE,GAAG;YAAEC,OAAO,EAAE;UAAE,CAAE;UACtCC,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAE;UACpCE,IAAI,EAAE;YAAEH,OAAO,EAAE,CAAC,GAAG;YAAEC,OAAO,EAAE;UAAE,CAAE;UACpCG,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAC9BC,IAAI,EAAEf,OAAO,GAAG,GAAG,GAAG,KAAM,CAAC;UAAA;UAC7BgB,eAAe,EAAE;YAAEC,IAAI,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAE,CAAE;UACvCC,WAAW,EAAE,GAAI;UACjBC,SAAS,EAAEA,CAACC,CAAC,EAAEC,IAAI,KAAK;YACtB,IAAIA,IAAI,CAACC,MAAM,CAACC,CAAC,GAAG,GAAG,EAAE;cACvBtB,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,CAAC,MAAM,IAAIoB,IAAI,CAACC,MAAM,CAACC,CAAC,GAAG,CAAC,GAAG,EAAE;cAC/BtB,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB;UACF,CAAE;UACFE,SAAS,EAAC,0KAEoE;UAC9EqB,KAAK,EAAE;YAAEC,kBAAkB,EAAE;UAAS,CAAE;UAAArB,QAAA,EAEvCL,OAAO,GAAGH,MAAM,GAAGD;QAAQ,GApBvBI,OAAO,GAAG,QAAQ,GAAG,UAAU;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqB1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,EAGL,CAAC9B,OAAO,gBACPN,OAAA;MACEqC,OAAO,EAAEA,CAAA,KAAM9B,UAAU,CAAC,IAAI,CAAE;MAChCG,SAAS,EAAC,sFAAsF;MAAAC,QAAA,EACjG;IAED;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETpC,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BX,OAAA;QACEqC,OAAO,EAAEA,CAAA,KAAM7B,WAAW,CAAC,MAAM,CAAE;QACnCE,SAAS,EAAC,+EAA+E;QAAAC,QAAA,EAC1F;MAED;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpC,OAAA;QACEqC,OAAO,EAAEA,CAAA,KAAM7B,WAAW,CAAC,OAAO,CAAE;QACpCE,SAAS,EAAC,mFAAmF;QAAAC,QAAA,EAC9F;MAED;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CAlEQJ,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAoElB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}