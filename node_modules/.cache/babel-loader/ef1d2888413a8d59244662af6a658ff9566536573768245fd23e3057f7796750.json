{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Downloads\\\\flashcard-web-app-full\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport Flashcard from \"./components/Flashcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [decks, setDecks] = useState({\n    Uncategorized: []\n  });\n  const [activeDeck, setActiveDeck] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [showFolderInput, setShowFolderInput] = useState(false);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n\n  // Load from localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem(\"flashcardDecks\");\n    if (saved) {\n      setDecks(JSON.parse(saved));\n    }\n  }, []);\n\n  // Save to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"flashcardDecks\", JSON.stringify(decks));\n  }, [decks]);\n\n  // File upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedCards = results.data.filter(row => row.question || row.Question).map(row => ({\n          question: (row.question || row.Question || \"\").trim(),\n          answer: (row.answer || row.Answer || \"\").trim()\n        })).filter(card => card.question && card.answer);\n        if (parsedCards.length === 0) return;\n        const newDeck = {\n          id: Date.now(),\n          name: file.name.replace(\".csv\", \"\"),\n          cards: parsedCards,\n          learned: [],\n          stats: {\n            swipes: 0,\n            knew: 0,\n            didntKnow: 0\n          },\n          currentIndex: 0,\n          finished: false\n        };\n        setDecks(prev => ({\n          ...prev,\n          Uncategorized: [...(prev.Uncategorized || []), newDeck]\n        }));\n      }\n    });\n  };\n\n  // Folder creation\n  const handleCreateFolder = () => {\n    if (!newFolderName.trim()) return;\n    if (decks[newFolderName] || newFolderName === \"Learned Cards\") return; // prevent duplicates & reserved name\n\n    setDecks(prev => ({\n      ...prev,\n      [newFolderName]: []\n    }));\n    setNewFolderName(\"\");\n    setShowFolderInput(false);\n  };\n\n  // Move deck to another folder\n  const moveDeckToFolder = (deckId, fromFolder, toFolder) => {\n    if (!toFolder || fromFolder === toFolder) return;\n    const deckToMove = decks[fromFolder].find(d => d.id === deckId);\n    setDecks(prev => {\n      const updated = {\n        ...prev\n      };\n      updated[fromFolder] = updated[fromFolder].filter(d => d.id !== deckId);\n      updated[toFolder] = [...(updated[toFolder] || []), deckToMove];\n      return updated;\n    });\n  };\n\n  // Handle swipe (knew it / didn’t know)\n  const handleSwipe = direction => {\n    if (!activeDeck) return;\n    const {\n      folder,\n      deck\n    } = activeDeck;\n    const currentCard = deck.cards[deck.currentIndex];\n    let updatedDeck = {\n      ...deck\n    };\n    updatedDeck.swipes = (updatedDeck.swipes || 0) + 1;\n    if (direction === \"right\") {\n      updatedDeck.stats.knew += 1;\n      updatedDeck.learned = [...updatedDeck.learned, currentCard];\n      updatedDeck.cards.splice(updatedDeck.currentIndex, 1);\n    } else {\n      updatedDeck.stats.didntKnow += 1;\n      updatedDeck.cards.push(currentCard);\n      updatedDeck.cards.splice(updatedDeck.currentIndex, 1);\n      updatedDeck.learned = updatedDeck.learned.filter(c => c.question !== currentCard.question);\n    }\n    if (updatedDeck.cards.length === 0) {\n      updatedDeck.finished = true;\n    } else {\n      updatedDeck.currentIndex = updatedDeck.currentIndex % updatedDeck.cards.length;\n    }\n    setHistory(prev => [...prev, currentCard]);\n    setDecks(prev => {\n      const updated = {\n        ...prev\n      };\n      updated[folder] = updated[folder].map(d => d.id === deck.id ? updatedDeck : d);\n      return updated;\n    });\n    setActiveDeck({\n      folder,\n      deck: updatedDeck\n    });\n  };\n\n  // Handle Previous\n  const handlePrevious = () => {\n    if (history.length < 2) return;\n    const prevHistory = [...history];\n    prevHistory.pop();\n    const lastCard = prevHistory[prevHistory.length - 1];\n    setHistory(prevHistory);\n    setActiveDeck(prevActive => {\n      if (!prevActive) return prevActive;\n      const {\n        folder,\n        deck\n      } = prevActive;\n      const updatedDeck = {\n        ...deck\n      };\n      const index = updatedDeck.cards.findIndex(c => c.question === lastCard.question);\n      if (index >= 0) {\n        updatedDeck.currentIndex = index;\n      } else {\n        updatedDeck.cards.unshift(lastCard);\n        updatedDeck.currentIndex = 0;\n      }\n      return {\n        folder,\n        deck: updatedDeck\n      };\n    });\n  };\n\n  // Delete deck\n  const handleDeleteDeck = (deckId, folder) => {\n    setDecks(prev => {\n      const updated = {\n        ...prev\n      };\n      updated[folder] = updated[folder].filter(d => d.id !== deckId);\n      return updated;\n    });\n    setActiveDeck(null);\n  };\n\n  // Restart deck\n  const handleRestart = (deckId, folder) => {\n    setDecks(prev => {\n      const updated = {\n        ...prev\n      };\n      updated[folder] = updated[folder].map(deck => deck.id === deckId ? {\n        ...deck,\n        cards: [...deck.cards, ...deck.learned],\n        learned: [],\n        currentIndex: 0,\n        finished: false,\n        stats: {\n          swipes: 0,\n          knew: 0,\n          didntKnow: 0\n        }\n      } : deck);\n      return updated;\n    });\n  };\n\n  // Active deck view\n  if (activeDeck) {\n    const {\n      folder,\n      deck\n    } = activeDeck;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveDeck(null),\n        className: \"mb-4 px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400 transition\",\n        children: \"\\u2B05 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: [\"\\uD83D\\uDCDA \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: deck.finished ? \"✅ Deck Completed\" : `${deck.cards.length} cards left`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), !deck.finished && deck.cards.length > 0 && /*#__PURE__*/_jsxDEV(Flashcard, {\n        question: deck.cards[deck.currentIndex].question,\n        answer: deck.cards[deck.currentIndex].answer,\n        onSwipe: handleSwipe,\n        canGoPrevious: history.length > 1,\n        onPrevious: handlePrevious\n      }, deck.currentIndex + \"-\" + deck.cards.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), deck.finished && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow-xl w-96 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"\\uD83C\\uDF89 Deck Completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cards Left: \", deck.cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Swipes: \", deck.stats.swipes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-600 font-semibold\",\n          children: [\"\\u2705 Knew it: \", deck.stats.knew]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 font-semibold mb-4\",\n          children: [\"\\u274C Didn\\u2019t Know: \", deck.stats.didntKnow]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRestart(deck.id, folder),\n          className: \"px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition\",\n          children: \"Restart Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Home view\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"\\uD83D\\uDCC2 Flashcard Decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      className: \"mb-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: showFolderInput ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"Folder name\",\n          className: \"border px-2 py-1 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateFolder,\n          className: \"px-4 py-1 bg-green-500 text-white rounded hover:bg-green-600\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFolderInput(false),\n          className: \"px-4 py-1 bg-gray-400 text-white rounded hover:bg-gray-500\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowFolderInput(true),\n        className: \"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600\",\n        children: \"\\u2795 Create New Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), Object.keys(decks).map(folder => folder !== \"Learned Cards\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: [\"\\uD83D\\uDCC1 \", folder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-4 items-center\",\n        children: decks[folder].map(deck => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveDeck({\n              folder,\n              deck\n            }),\n            className: \"px-6 py-3 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 transition\",\n            children: [deck.name, \" (\", deck.cards.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => moveDeckToFolder(deck.id, folder, e.target.value),\n            defaultValue: \"\",\n            className: \"border px-2 py-1 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Move to...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 23\n            }, this), Object.keys(decks).filter(f => f !== \"Learned Cards\").map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: f,\n              children: f\n            }, f, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 27\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteDeck(deck.id, folder),\n            className: \"px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\",\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 21\n          }, this)]\n        }, deck.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }, this)]\n    }, folder, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"\\uD83D\\uDCD8 Learned Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-4 items-center\",\n        children: Object.keys(decks).map(folder => decks[folder].map(deck => deck.learned.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveDeck({\n              folder,\n              deck: {\n                ...deck,\n                name: deck.name + \" (Learned)\",\n                cards: deck.learned,\n                learned: [],\n                currentIndex: 0,\n                finished: false\n              }\n            }),\n            className: \"px-6 py-3 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-600 transition\",\n            children: [deck.name, \" (\", deck.learned.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this)\n        }, \"learned-\" + deck.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this) : null))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P4HG70ERTRKy3NCc4WcHoaSY2nc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Flashcard","jsxDEV","_jsxDEV","App","_s","decks","setDecks","Uncategorized","activeDeck","setActiveDeck","history","setHistory","showFolderInput","setShowFolderInput","newFolderName","setNewFolderName","saved","localStorage","getItem","JSON","parse","setItem","stringify","handleFileUpload","event","file","target","files","header","skipEmptyLines","complete","results","parsedCards","data","filter","row","question","Question","map","trim","answer","Answer","card","length","newDeck","id","Date","now","name","replace","cards","learned","stats","swipes","knew","didntKnow","currentIndex","finished","prev","handleCreateFolder","moveDeckToFolder","deckId","fromFolder","toFolder","deckToMove","find","d","updated","handleSwipe","direction","folder","deck","currentCard","updatedDeck","splice","push","c","handlePrevious","prevHistory","pop","lastCard","prevActive","index","findIndex","unshift","handleDeleteDeck","handleRestart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSwipe","canGoPrevious","onPrevious","type","accept","onChange","value","e","placeholder","Object","keys","defaultValue","disabled","f","_c","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Downloads/flashcard-web-app-full/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport Flashcard from \"./components/Flashcard\";\n\nfunction App() {\n  const [decks, setDecks] = useState({ Uncategorized: [] });\n  const [activeDeck, setActiveDeck] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [showFolderInput, setShowFolderInput] = useState(false);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n\n  // Load from localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem(\"flashcardDecks\");\n    if (saved) {\n      setDecks(JSON.parse(saved));\n    }\n  }, []);\n\n  // Save to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"flashcardDecks\", JSON.stringify(decks));\n  }, [decks]);\n\n  // File upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedCards = results.data\n          .filter((row) => row.question || row.Question)\n          .map((row) => ({\n            question: (row.question || row.Question || \"\").trim(),\n            answer: (row.answer || row.Answer || \"\").trim(),\n          }))\n          .filter((card) => card.question && card.answer);\n\n        if (parsedCards.length === 0) return;\n\n        const newDeck = {\n          id: Date.now(),\n          name: file.name.replace(\".csv\", \"\"),\n          cards: parsedCards,\n          learned: [],\n          stats: { swipes: 0, knew: 0, didntKnow: 0 },\n          currentIndex: 0,\n          finished: false,\n        };\n\n        setDecks((prev) => ({\n          ...prev,\n          Uncategorized: [...(prev.Uncategorized || []), newDeck],\n        }));\n      },\n    });\n  };\n\n  // Folder creation\n  const handleCreateFolder = () => {\n    if (!newFolderName.trim()) return;\n    if (decks[newFolderName] || newFolderName === \"Learned Cards\") return; // prevent duplicates & reserved name\n\n    setDecks((prev) => ({\n      ...prev,\n      [newFolderName]: [],\n    }));\n    setNewFolderName(\"\");\n    setShowFolderInput(false);\n  };\n\n  // Move deck to another folder\n  const moveDeckToFolder = (deckId, fromFolder, toFolder) => {\n    if (!toFolder || fromFolder === toFolder) return;\n    const deckToMove = decks[fromFolder].find((d) => d.id === deckId);\n\n    setDecks((prev) => {\n      const updated = { ...prev };\n      updated[fromFolder] = updated[fromFolder].filter((d) => d.id !== deckId);\n      updated[toFolder] = [...(updated[toFolder] || []), deckToMove];\n      return updated;\n    });\n  };\n\n  // Handle swipe (knew it / didn’t know)\n  const handleSwipe = (direction) => {\n    if (!activeDeck) return;\n    const { folder, deck } = activeDeck;\n    const currentCard = deck.cards[deck.currentIndex];\n    let updatedDeck = { ...deck };\n\n    updatedDeck.swipes = (updatedDeck.swipes || 0) + 1;\n\n    if (direction === \"right\") {\n      updatedDeck.stats.knew += 1;\n      updatedDeck.learned = [...updatedDeck.learned, currentCard];\n      updatedDeck.cards.splice(updatedDeck.currentIndex, 1);\n    } else {\n      updatedDeck.stats.didntKnow += 1;\n      updatedDeck.cards.push(currentCard);\n      updatedDeck.cards.splice(updatedDeck.currentIndex, 1);\n      updatedDeck.learned = updatedDeck.learned.filter(\n        (c) => c.question !== currentCard.question\n      );\n    }\n\n    if (updatedDeck.cards.length === 0) {\n      updatedDeck.finished = true;\n    } else {\n      updatedDeck.currentIndex =\n        updatedDeck.currentIndex % updatedDeck.cards.length;\n    }\n\n    setHistory((prev) => [...prev, currentCard]);\n\n    setDecks((prev) => {\n      const updated = { ...prev };\n      updated[folder] = updated[folder].map((d) =>\n        d.id === deck.id ? updatedDeck : d\n      );\n      return updated;\n    });\n\n    setActiveDeck({ folder, deck: updatedDeck });\n  };\n\n  // Handle Previous\n  const handlePrevious = () => {\n    if (history.length < 2) return;\n    const prevHistory = [...history];\n    prevHistory.pop();\n    const lastCard = prevHistory[prevHistory.length - 1];\n    setHistory(prevHistory);\n\n    setActiveDeck((prevActive) => {\n      if (!prevActive) return prevActive;\n      const { folder, deck } = prevActive;\n      const updatedDeck = { ...deck };\n      const index = updatedDeck.cards.findIndex(\n        (c) => c.question === lastCard.question\n      );\n      if (index >= 0) {\n        updatedDeck.currentIndex = index;\n      } else {\n        updatedDeck.cards.unshift(lastCard);\n        updatedDeck.currentIndex = 0;\n      }\n      return { folder, deck: updatedDeck };\n    });\n  };\n\n  // Delete deck\n  const handleDeleteDeck = (deckId, folder) => {\n    setDecks((prev) => {\n      const updated = { ...prev };\n      updated[folder] = updated[folder].filter((d) => d.id !== deckId);\n      return updated;\n    });\n    setActiveDeck(null);\n  };\n\n  // Restart deck\n  const handleRestart = (deckId, folder) => {\n    setDecks((prev) => {\n      const updated = { ...prev };\n      updated[folder] = updated[folder].map((deck) =>\n        deck.id === deckId\n          ? {\n              ...deck,\n              cards: [...deck.cards, ...deck.learned],\n              learned: [],\n              currentIndex: 0,\n              finished: false,\n              stats: { swipes: 0, knew: 0, didntKnow: 0 },\n            }\n          : deck\n      );\n      return updated;\n    });\n  };\n\n  // Active deck view\n  if (activeDeck) {\n    const { folder, deck } = activeDeck;\n    return (\n      <div className=\"p-6 text-center\">\n        <button\n          onClick={() => setActiveDeck(null)}\n          className=\"mb-4 px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400 transition\"\n        >\n          ⬅ Back to Home\n        </button>\n        <h1 className=\"text-2xl font-bold mb-2\">📚 {deck.name}</h1>\n        <p className=\"text-gray-600 mb-4\">\n          {deck.finished ? \"✅ Deck Completed\" : `${deck.cards.length} cards left`}\n        </p>\n\n        {!deck.finished && deck.cards.length > 0 && (\n          <Flashcard\n            key={deck.currentIndex + \"-\" + deck.cards.length}\n            question={deck.cards[deck.currentIndex].question}\n            answer={deck.cards[deck.currentIndex].answer}\n            onSwipe={handleSwipe}\n            canGoPrevious={history.length > 1}\n            onPrevious={handlePrevious}\n          />\n        )}\n\n        {deck.finished && (\n          <div className=\"bg-white p-6 rounded-2xl shadow-xl w-96 mx-auto\">\n            <h2 className=\"text-xl font-bold mb-4\">🎉 Deck Completed!</h2>\n            <p>Cards Left: {deck.cards.length}</p>\n            <p>Total Swipes: {deck.stats.swipes}</p>\n            <p className=\"text-green-600 font-semibold\">\n              ✅ Knew it: {deck.stats.knew}\n            </p>\n            <p className=\"text-red-600 font-semibold mb-4\">\n              ❌ Didn’t Know: {deck.stats.didntKnow}\n            </p>\n            <button\n              onClick={() => handleRestart(deck.id, folder)}\n              className=\"px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition\"\n            >\n              Restart Deck\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Home view\n  return (\n    <div className=\"p-6 text-center\">\n      <h1 className=\"text-3xl font-bold mb-6\">📂 Flashcard Decks</h1>\n      <input\n        type=\"file\"\n        accept=\".csv\"\n        onChange={handleFileUpload}\n        className=\"mb-6\"\n      />\n      <div className=\"mb-6\">\n        {showFolderInput ? (\n          <div className=\"flex gap-2 justify-center\">\n            <input\n              type=\"text\"\n              value={newFolderName}\n              onChange={(e) => setNewFolderName(e.target.value)}\n              placeholder=\"Folder name\"\n              className=\"border px-2 py-1 rounded\"\n            />\n            <button\n              onClick={handleCreateFolder}\n              className=\"px-4 py-1 bg-green-500 text-white rounded hover:bg-green-600\"\n            >\n              Add\n            </button>\n            <button\n              onClick={() => setShowFolderInput(false)}\n              className=\"px-4 py-1 bg-gray-400 text-white rounded hover:bg-gray-500\"\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => setShowFolderInput(true)}\n            className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600\"\n          >\n            ➕ Create New Folder\n          </button>\n        )}\n      </div>\n\n      {/* Normal folders */}\n      {Object.keys(decks).map(\n        (folder) =>\n          folder !== \"Learned Cards\" && (\n            <div key={folder} className=\"mb-8\">\n              <h2 className=\"text-xl font-bold mb-4\">📁 {folder}</h2>\n              <div className=\"flex flex-col gap-4 items-center\">\n                {decks[folder].map((deck) => (\n                  <div key={deck.id} className=\"flex gap-4 items-center\">\n                    <button\n                      onClick={() => setActiveDeck({ folder, deck })}\n                      className=\"px-6 py-3 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 transition\"\n                    >\n                      {deck.name} ({deck.cards.length})\n                    </button>\n                    <select\n                      onChange={(e) =>\n                        moveDeckToFolder(deck.id, folder, e.target.value)\n                      }\n                      defaultValue=\"\"\n                      className=\"border px-2 py-1 rounded\"\n                    >\n                      <option value=\"\" disabled>\n                        Move to...\n                      </option>\n                      {Object.keys(decks)\n                        .filter((f) => f !== \"Learned Cards\")\n                        .map((f) => (\n                          <option key={f} value={f}>\n                            {f}\n                          </option>\n                        ))}\n                    </select>\n                    <button\n                      onClick={() => handleDeleteDeck(deck.id, folder)}\n                      className=\"px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\"\n                    >\n                      🗑\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n      )}\n\n      {/* Learned Cards folder */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-xl font-bold mb-4\">📘 Learned Cards</h2>\n        <div className=\"flex flex-col gap-4 items-center\">\n          {Object.keys(decks).map((folder) =>\n            decks[folder].map((deck) =>\n              deck.learned.length > 0 ? (\n                <div key={\"learned-\" + deck.id} className=\"flex gap-4 items-center\">\n                  <button\n                    onClick={() =>\n                      setActiveDeck({\n                        folder,\n                        deck: {\n                          ...deck,\n                          name: deck.name + \" (Learned)\",\n                          cards: deck.learned,\n                          learned: [],\n                          currentIndex: 0,\n                          finished: false,\n                        },\n                      })\n                    }\n                    className=\"px-6 py-3 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-600 transition\"\n                  >\n                    {deck.name} ({deck.learned.length})\n                  </button>\n                </div>\n              ) : null\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}